Version 4.0 HI-TECH Software Intermediate Code
[v F3348 `(v ~T0 @X0 0 tf ]
"2364 C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2364:     struct {
[s S119 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S119 . LATA0 LATA1 LATA2 LATA3 LATA4 LATA5 LATA6 LATA7 ]
"2363
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2363: typedef union {
[u S118 `S119 1 ]
[n S118 . . ]
"2375
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2375: extern volatile LATAbits_t LATAbits __attribute__((address(0x10C)));
[v _LATAbits `VS118 ~T0 @X0 0 e@268 ]
"622
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 622:     struct {
[s S40 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S40 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"621
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 621: typedef union {
[u S39 `S40 1 ]
[n S39 . . ]
"633
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 633: extern volatile PORTDbits_t PORTDbits __attribute__((address(0x00F)));
[v _PORTDbits `VS39 ~T0 @X0 0 e@15 ]
"2620
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2620:     struct {
[s S128 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S128 . LATE0 LATE1 LATE2 LATE3 ]
"2619
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2619: typedef union {
[u S127 `S128 1 ]
[n S127 . . ]
"2627
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2627: extern volatile LATEbits_t LATEbits __attribute__((address(0x110)));
[v _LATEbits `VS127 ~T0 @X0 0 e@272 ]
"23 ./display.h
[; ;./display.h: 23: void displayManager(char s1[], char s2[], char s3[], char s4[]);
[v _displayManager `(v ~T0 @X0 0 ef4`*uc`*uc`*uc`*uc ]
"111 C:\Program Files\Microchip\xc8\v2.32\pic\include\c99\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
"36 C:\Program Files\Microchip\xc8\v2.32\pic\include\c99\string.h
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\c99\string.h: 36: char *strcat (char *restrict, const char *restrict);
[v _strcat `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"27 ./tester.h
[; ;./tester.h: 27: void errorAlert(void);
[v _errorAlert `(v ~T0 @X0 0 ef ]
"90 ./mcc_generated_files/eusart.h
[; ;./mcc_generated_files/eusart.h: 90: extern volatile uint8_t eusartRxCount;
[v _eusartRxCount `Vuc ~T0 @X0 0 e ]
"329
[; ;./mcc_generated_files/eusart.h: 329: uint8_t EUSART_Read(void);
[v _EUSART_Read `(uc ~T0 @X0 0 ef ]
[v F183 `(v ~T0 @X0 1 tf1`ul ]
"12 C:\Program Files\Microchip\xc8\v2.32\pic\include\builtins.h
[v __delay `JF183 ~T0 @X0 0 e ]
[p i __delay ]
"2426 C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2426:     struct {
[s S121 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S121 . LATB0 LATB1 LATB2 LATB3 LATB4 LATB5 LATB6 LATB7 ]
"2425
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2425: typedef union {
[u S120 `S121 1 ]
[n S120 . . ]
"2437
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2437: extern volatile LATBbits_t LATBbits __attribute__((address(0x10D)));
[v _LATBbits `VS120 ~T0 @X0 0 e@269 ]
"6 ./I2C-tester.h
[; ;./I2C-tester.h: 6: char startTestSlave();
[v _startTestSlave `(uc ~T0 @X0 0 e? ]
"4
[; ;./I2C-tester.h: 4: char getSlaveStatus(char code);
[v _getSlaveStatus `(uc ~T0 @X0 0 ef1`uc ]
"34 ./tester.h
[; ;./tester.h: 34: void processSlaveResponse(char repSlave);
[v _processSlaveResponse `(v ~T0 @X0 0 ef1`uc ]
"55 C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 55: __asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
"75
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 75: __asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
"95
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 95: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"115
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 115: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"178
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 178: __asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
"198
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 198: __asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
"222
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 222: __asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
"242
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 242: __asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
"262
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 262: __asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
"314
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 314: __asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
"334
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 334: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"354
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 354: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"432
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 432: __asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
"494
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 494: __asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
"556
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 556: __asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
"618
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 618: __asm("PORTD equ 0Fh");
[; <" PORTD equ 0Fh ;# ">
"680
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 680: __asm("PORTE equ 010h");
[; <" PORTE equ 010h ;# ">
"718
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 718: __asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
"780
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 780: __asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
"837
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 837: __asm("PIR3 equ 013h");
[; <" PIR3 equ 013h ;# ">
"883
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 883: __asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
"903
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 903: __asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
"910
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 910: __asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
"930
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 930: __asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
"950
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 950: __asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
"1022
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1022: __asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
"1099
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1099: __asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
"1119
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1119: __asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
"1139
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1139: __asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
"1210
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1210: __asm("CPSCON0 equ 01Eh");
[; <" CPSCON0 equ 01Eh ;# ">
"1270
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1270: __asm("CPSCON1 equ 01Fh");
[; <" CPSCON1 equ 01Fh ;# ">
"1316
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1316: __asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
"1378
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1378: __asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
"1440
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1440: __asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
"1502
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1502: __asm("TRISD equ 08Fh");
[; <" TRISD equ 08Fh ;# ">
"1564
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1564: __asm("TRISE equ 090h");
[; <" TRISE equ 090h ;# ">
"1602
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1602: __asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
"1664
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1664: __asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
"1721
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1721: __asm("PIE3 equ 093h");
[; <" PIE3 equ 093h ;# ">
"1767
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1767: __asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
"1850
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1850: __asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
"1901
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1901: __asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
"1960
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 1960: __asm("OSCTUNE equ 098h");
[; <" OSCTUNE equ 098h ;# ">
"2018
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2018: __asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
"2090
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2090: __asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
"2152
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2152: __asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
"2159
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2159: __asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
"2179
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2179: __asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
"2199
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2199: __asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
"2288
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2288: __asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
"2360
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2360: __asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
"2422
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2422: __asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
"2484
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2484: __asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
"2546
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2546: __asm("LATD equ 010Fh");
[; <" LATD equ 010Fh ;# ">
"2616
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2616: __asm("LATE equ 0110h");
[; <" LATE equ 0110h ;# ">
"2654
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2654: __asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
"2711
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2711: __asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
"2777
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2777: __asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
"2834
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2834: __asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
"2900
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2900: __asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
"2926
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2926: __asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
"2953
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 2953: __asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
"3029
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3029: __asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
"3090
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3090: __asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
"3142
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3142: __asm("SRCON0 equ 011Ah");
[; <" SRCON0 equ 011Ah ;# ">
"3213
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3213: __asm("SRCON1 equ 011Bh");
[; <" SRCON1 equ 011Bh ;# ">
"3275
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3275: __asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
"3331
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3331: __asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
"3389
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3389: __asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
"3447
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3447: __asm("ANSELD equ 018Fh");
[; <" ANSELD equ 018Fh ;# ">
"3517
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3517: __asm("ANSELE equ 0190h");
[; <" ANSELE equ 0190h ;# ">
"3557
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3557: __asm("EEADR equ 0191h");
[; <" EEADR equ 0191h ;# ">
"3564
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3564: __asm("EEADRL equ 0191h");
[; <" EEADRL equ 0191h ;# ">
"3584
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3584: __asm("EEADRH equ 0192h");
[; <" EEADRH equ 0192h ;# ">
"3604
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3604: __asm("EEDAT equ 0193h");
[; <" EEDAT equ 0193h ;# ">
"3611
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3611: __asm("EEDATL equ 0193h");
[; <" EEDATL equ 0193h ;# ">
"3616
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3616: __asm("EEDATA equ 0193h");
[; <" EEDATA equ 0193h ;# ">
"3649
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3649: __asm("EEDATH equ 0194h");
[; <" EEDATH equ 0194h ;# ">
"3669
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3669: __asm("EECON1 equ 0195h");
[; <" EECON1 equ 0195h ;# ">
"3731
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3731: __asm("EECON2 equ 0196h");
[; <" EECON2 equ 0196h ;# ">
"3751
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3751: __asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
"3771
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3771: __asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
"3791
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3791: __asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
"3798
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3798: __asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
"3803
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3803: __asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
"3807
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3807: __asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
"3852
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3852: __asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
"3857
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3857: __asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
"3890
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3890: __asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
"3952
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 3952: __asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
"4014
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4014: __asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
"4066
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4066: __asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
"4136
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4136: __asm("WPUE equ 0210h");
[; <" WPUE equ 0210h ;# ">
"4157
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4157: __asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
"4177
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4177: __asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
"4197
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4197: __asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
"4217
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4217: __asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
"4279
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4279: __asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
"4284
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4284: __asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
"4417
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4417: __asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
"4479
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4479: __asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
"4541
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4541: __asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
"4548
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4548: __asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
"4568
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4568: __asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
"4588
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4588: __asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
"4670
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4670: __asm("PWM1CON equ 0294h");
[; <" PWM1CON equ 0294h ;# ">
"4732
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4732: __asm("CCP1AS equ 0295h");
[; <" CCP1AS equ 0295h ;# ">
"4737
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4737: __asm("ECCP1AS equ 0295h");
[; <" ECCP1AS equ 0295h ;# ">
"4854
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4854: __asm("PSTR1CON equ 0296h");
[; <" PSTR1CON equ 0296h ;# ">
"4898
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4898: __asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
"4905
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4905: __asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
"4925
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4925: __asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
"4945
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 4945: __asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
"5027
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5027: __asm("PWM2CON equ 029Bh");
[; <" PWM2CON equ 029Bh ;# ">
"5089
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5089: __asm("CCP2AS equ 029Ch");
[; <" CCP2AS equ 029Ch ;# ">
"5094
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5094: __asm("ECCP2AS equ 029Ch");
[; <" ECCP2AS equ 029Ch ;# ">
"5211
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5211: __asm("PSTR2CON equ 029Dh");
[; <" PSTR2CON equ 029Dh ;# ">
"5255
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5255: __asm("CCPTMRS0 equ 029Eh");
[; <" CCPTMRS0 equ 029Eh ;# ">
"5343
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5343: __asm("CCPTMRS1 equ 029Fh");
[; <" CCPTMRS1 equ 029Fh ;# ">
"5377
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5377: __asm("CCPR3 equ 0311h");
[; <" CCPR3 equ 0311h ;# ">
"5384
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5384: __asm("CCPR3L equ 0311h");
[; <" CCPR3L equ 0311h ;# ">
"5404
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5404: __asm("CCPR3H equ 0312h");
[; <" CCPR3H equ 0312h ;# ">
"5424
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5424: __asm("CCP3CON equ 0313h");
[; <" CCP3CON equ 0313h ;# ">
"5486
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5486: __asm("PWM3CON equ 0314h");
[; <" PWM3CON equ 0314h ;# ">
"5548
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5548: __asm("CCP3AS equ 0315h");
[; <" CCP3AS equ 0315h ;# ">
"5553
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5553: __asm("ECCP3AS equ 0315h");
[; <" ECCP3AS equ 0315h ;# ">
"5670
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5670: __asm("PSTR3CON equ 0316h");
[; <" PSTR3CON equ 0316h ;# ">
"5714
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5714: __asm("CCPR4 equ 0318h");
[; <" CCPR4 equ 0318h ;# ">
"5721
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5721: __asm("CCPR4L equ 0318h");
[; <" CCPR4L equ 0318h ;# ">
"5741
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5741: __asm("CCPR4H equ 0319h");
[; <" CCPR4H equ 0319h ;# ">
"5761
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5761: __asm("CCP4CON equ 031Ah");
[; <" CCP4CON equ 031Ah ;# ">
"5811
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5811: __asm("CCPR5 equ 031Ch");
[; <" CCPR5 equ 031Ch ;# ">
"5818
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5818: __asm("CCPR5L equ 031Ch");
[; <" CCPR5L equ 031Ch ;# ">
"5838
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5838: __asm("CCPR5H equ 031Dh");
[; <" CCPR5H equ 031Dh ;# ">
"5858
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5858: __asm("CCP5CON equ 031Eh");
[; <" CCP5CON equ 031Eh ;# ">
"5908
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5908: __asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
"5978
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 5978: __asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
"6048
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6048: __asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
"6118
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6118: __asm("TMR4 equ 0415h");
[; <" TMR4 equ 0415h ;# ">
"6138
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6138: __asm("PR4 equ 0416h");
[; <" PR4 equ 0416h ;# ">
"6158
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6158: __asm("T4CON equ 0417h");
[; <" T4CON equ 0417h ;# ">
"6229
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6229: __asm("TMR6 equ 041Ch");
[; <" TMR6 equ 041Ch ;# ">
"6249
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6249: __asm("PR6 equ 041Dh");
[; <" PR6 equ 041Dh ;# ">
"6269
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6269: __asm("T6CON equ 041Eh");
[; <" T6CON equ 041Eh ;# ">
"6340
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6340: __asm("LCDCON equ 0791h");
[; <" LCDCON equ 0791h ;# ">
"6411
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6411: __asm("LCDPS equ 0792h");
[; <" LCDPS equ 0792h ;# ">
"6481
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6481: __asm("LCDREF equ 0793h");
[; <" LCDREF equ 0793h ;# ">
"6533
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6533: __asm("LCDCST equ 0794h");
[; <" LCDCST equ 0794h ;# ">
"6573
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6573: __asm("LCDRL equ 0795h");
[; <" LCDRL equ 0795h ;# ">
"6651
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6651: __asm("LCDSE0 equ 0798h");
[; <" LCDSE0 equ 0798h ;# ">
"6713
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6713: __asm("LCDSE1 equ 0799h");
[; <" LCDSE1 equ 0799h ;# ">
"6775
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6775: __asm("LCDSE2 equ 079Ah");
[; <" LCDSE2 equ 079Ah ;# ">
"6837
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6837: __asm("LCDDATA0 equ 07A0h");
[; <" LCDDATA0 equ 07A0h ;# ">
"6899
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6899: __asm("LCDDATA1 equ 07A1h");
[; <" LCDDATA1 equ 07A1h ;# ">
"6961
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 6961: __asm("LCDDATA2 equ 07A2h");
[; <" LCDDATA2 equ 07A2h ;# ">
"7023
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7023: __asm("LCDDATA3 equ 07A3h");
[; <" LCDDATA3 equ 07A3h ;# ">
"7085
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7085: __asm("LCDDATA4 equ 07A4h");
[; <" LCDDATA4 equ 07A4h ;# ">
"7147
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7147: __asm("LCDDATA5 equ 07A5h");
[; <" LCDDATA5 equ 07A5h ;# ">
"7209
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7209: __asm("LCDDATA6 equ 07A6h");
[; <" LCDDATA6 equ 07A6h ;# ">
"7271
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7271: __asm("LCDDATA7 equ 07A7h");
[; <" LCDDATA7 equ 07A7h ;# ">
"7333
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7333: __asm("LCDDATA8 equ 07A8h");
[; <" LCDDATA8 equ 07A8h ;# ">
"7395
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7395: __asm("LCDDATA9 equ 07A9h");
[; <" LCDDATA9 equ 07A9h ;# ">
"7457
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7457: __asm("LCDDATA10 equ 07AAh");
[; <" LCDDATA10 equ 07AAh ;# ">
"7519
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7519: __asm("LCDDATA11 equ 07ABh");
[; <" LCDDATA11 equ 07ABh ;# ">
"7581
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7581: __asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
"7613
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7613: __asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
"7633
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7633: __asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
"7653
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7653: __asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
"7673
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7673: __asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
"7693
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7693: __asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
"7713
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7713: __asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
"7733
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7733: __asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
"7753
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7753: __asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
"7773
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7773: __asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
"7793
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16lf1939.h: 7793: __asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
"213 ./mcc_generated_files/i2c_master.h
[; ;./mcc_generated_files/i2c_master.h: 213: void (*MSSP_InterruptHandler)(void);
[v _MSSP_InterruptHandler `*F3348 ~T0 @X0 1 e ]
"18 tester.c
[; ;tester.c: 18: void alimenter(_Bool active) {
[v _alimenter `(v ~T0 @X0 1 ef1`a ]
{
[e :U _alimenter ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"20
[; ;tester.c: 20:     if (active) {
[e $ ! != -> _active `i -> 0 `i 386  ]
{
"22
[; ;tester.c: 22:         do { LATAbits.LATA0 = 1; } while(0);
[e :U 389 ]
{
[e = . . _LATAbits 0 0 -> -> 1 `i `uc ]
}
[e :U 388 ]
"23
[; ;tester.c: 23:     } else {
}
[e $U 390  ]
[e :U 386 ]
{
"24
[; ;tester.c: 24:         do { LATAbits.LATA0 = 0; } while(0);
[e :U 393 ]
{
[e = . . _LATAbits 0 0 -> -> 0 `i `uc ]
}
[e :U 392 ]
"25
[; ;tester.c: 25:     }
}
[e :U 390 ]
"26
[; ;tester.c: 26: }
[e :UE 385 ]
}
"28
[; ;tester.c: 28: void pressBP1(_Bool active) {
[v _pressBP1 `(v ~T0 @X0 1 ef1`a ]
{
[e :U _pressBP1 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"30
[; ;tester.c: 30:     if (active) {
[e $ ! != -> _active `i -> 0 `i 395  ]
{
"32
[; ;tester.c: 32:         do { LATAbits.LATA1 = 1; } while(0);
[e :U 398 ]
{
[e = . . _LATAbits 0 1 -> -> 1 `i `uc ]
}
[e :U 397 ]
"33
[; ;tester.c: 33:     } else {
}
[e $U 399  ]
[e :U 395 ]
{
"34
[; ;tester.c: 34:         do { LATAbits.LATA1 = 0; } while(0);
[e :U 402 ]
{
[e = . . _LATAbits 0 1 -> -> 0 `i `uc ]
}
[e :U 401 ]
"35
[; ;tester.c: 35:     }
}
[e :U 399 ]
"36
[; ;tester.c: 36: }
[e :UE 394 ]
}
"38
[; ;tester.c: 38: void pressBP2(_Bool active) {
[v _pressBP2 `(v ~T0 @X0 1 ef1`a ]
{
[e :U _pressBP2 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"40
[; ;tester.c: 40:     if (active) {
[e $ ! != -> _active `i -> 0 `i 404  ]
{
"42
[; ;tester.c: 42:         do { LATAbits.LATA2 = 1; } while(0);
[e :U 407 ]
{
[e = . . _LATAbits 0 2 -> -> 1 `i `uc ]
}
[e :U 406 ]
"43
[; ;tester.c: 43:     } else {
}
[e $U 408  ]
[e :U 404 ]
{
"44
[; ;tester.c: 44:         do { LATAbits.LATA2 = 0; } while(0);
[e :U 411 ]
{
[e = . . _LATAbits 0 2 -> -> 0 `i `uc ]
}
[e :U 410 ]
"45
[; ;tester.c: 45:     }
}
[e :U 408 ]
"46
[; ;tester.c: 46: }
[e :UE 403 ]
}
"48
[; ;tester.c: 48: void setHorloge(_Bool active) {
[v _setHorloge `(v ~T0 @X0 1 ef1`a ]
{
[e :U _setHorloge ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"50
[; ;tester.c: 50:     if (active) {
[e $ ! != -> _active `i -> 0 `i 413  ]
{
"52
[; ;tester.c: 52:         do { LATAbits.LATA3 = 1; } while(0);
[e :U 416 ]
{
[e = . . _LATAbits 0 3 -> -> 1 `i `uc ]
}
[e :U 415 ]
"53
[; ;tester.c: 53:     } else {
}
[e $U 417  ]
[e :U 413 ]
{
"54
[; ;tester.c: 54:         do { LATAbits.LATA3 = 0; } while(0);
[e :U 420 ]
{
[e = . . _LATAbits 0 3 -> -> 0 `i `uc ]
}
[e :U 419 ]
"55
[; ;tester.c: 55:     }
}
[e :U 417 ]
"57
[; ;tester.c: 57: }
[e :UE 412 ]
}
"59
[; ;tester.c: 59: _Bool testR1(_Bool active) {
[v _testR1 `(a ~T0 @X0 1 ef1`a ]
{
[e :U _testR1 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"61
[; ;tester.c: 61:     _Bool result = 0;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `a ]
"62
[; ;tester.c: 62:     if (active) {
[e $ ! != -> _active `i -> 0 `i 422  ]
{
"64
[; ;tester.c: 64:         if (PORTDbits.RD0 == 1 && PORTDbits.RD1 == 0) {
[e $ ! && == -> . . _PORTDbits 0 0 `i -> 1 `i == -> . . _PORTDbits 0 1 `i -> 0 `i 423  ]
{
"66
[; ;tester.c: 66:             result = 1;
[e = _result -> -> 1 `i `a ]
"67
[; ;tester.c: 67:         }
}
[e :U 423 ]
"68
[; ;tester.c: 68:     }
}
[e :U 422 ]
"70
[; ;tester.c: 70:     if (!active) {
[e $ ! ! != -> _active `i -> 0 `i 424  ]
{
"72
[; ;tester.c: 72:         if (PORTDbits.RD0 == 0 && PORTDbits.RD1 == 1) {
[e $ ! && == -> . . _PORTDbits 0 0 `i -> 0 `i == -> . . _PORTDbits 0 1 `i -> 1 `i 425  ]
{
"75
[; ;tester.c: 75:             result = 1;
[e = _result -> -> 1 `i `a ]
"76
[; ;tester.c: 76:         }
}
[e :U 425 ]
"77
[; ;tester.c: 77:     }
}
[e :U 424 ]
"79
[; ;tester.c: 79:     return result;
[e ) _result ]
[e $UE 421  ]
"80
[; ;tester.c: 80: }
[e :UE 421 ]
}
"82
[; ;tester.c: 82: _Bool testR2(_Bool active) {
[v _testR2 `(a ~T0 @X0 1 ef1`a ]
{
[e :U _testR2 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"84
[; ;tester.c: 84:     _Bool result = 0;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `a ]
"85
[; ;tester.c: 85:     if (active) {
[e $ ! != -> _active `i -> 0 `i 427  ]
{
"87
[; ;tester.c: 87:         if (PORTDbits.RD3 == 1 && PORTDbits.RD4 == 0) {
[e $ ! && == -> . . _PORTDbits 0 3 `i -> 1 `i == -> . . _PORTDbits 0 4 `i -> 0 `i 428  ]
{
"89
[; ;tester.c: 89:             result = 1;
[e = _result -> -> 1 `i `a ]
"90
[; ;tester.c: 90:         }
}
[e :U 428 ]
"91
[; ;tester.c: 91:     }
}
[e :U 427 ]
"93
[; ;tester.c: 93:     if (!active) {
[e $ ! ! != -> _active `i -> 0 `i 429  ]
{
"95
[; ;tester.c: 95:         if (PORTDbits.RD3 == 0 && PORTDbits.RD4 == 1) {
[e $ ! && == -> . . _PORTDbits 0 3 `i -> 0 `i == -> . . _PORTDbits 0 4 `i -> 1 `i 430  ]
{
"97
[; ;tester.c: 97:             result = 1;
[e = _result -> -> 1 `i `a ]
"98
[; ;tester.c: 98:         }
}
[e :U 430 ]
"99
[; ;tester.c: 99:     }
}
[e :U 429 ]
"101
[; ;tester.c: 101:     return result;
[e ) _result ]
[e $UE 426  ]
"102
[; ;tester.c: 102: }
[e :UE 426 ]
}
"104
[; ;tester.c: 104: _Bool testR3(_Bool active) {
[v _testR3 `(a ~T0 @X0 1 ef1`a ]
{
[e :U _testR3 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"107
[; ;tester.c: 107:     _Bool result = 0;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `a ]
"108
[; ;tester.c: 108:     if (active) {
[e $ ! != -> _active `i -> 0 `i 432  ]
{
"110
[; ;tester.c: 110:         if (PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0) {
[e $ ! && == -> . . _PORTDbits 0 5 `i -> 1 `i == -> . . _PORTDbits 0 6 `i -> 0 `i 433  ]
{
"112
[; ;tester.c: 112:             result = 1;
[e = _result -> -> 1 `i `a ]
"113
[; ;tester.c: 113:         }
}
[e :U 433 ]
"114
[; ;tester.c: 114:     }
}
[e :U 432 ]
"116
[; ;tester.c: 116:     if (!active) {
[e $ ! ! != -> _active `i -> 0 `i 434  ]
{
"118
[; ;tester.c: 118:         if (PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1) {
[e $ ! && == -> . . _PORTDbits 0 5 `i -> 0 `i == -> . . _PORTDbits 0 6 `i -> 1 `i 435  ]
{
"120
[; ;tester.c: 120:             result = 1;
[e = _result -> -> 1 `i `a ]
"121
[; ;tester.c: 121:         }
}
[e :U 435 ]
"122
[; ;tester.c: 122:     }
}
[e :U 434 ]
"124
[; ;tester.c: 124:     return result;
[e ) _result ]
[e $UE 431  ]
"125
[; ;tester.c: 125: }
[e :UE 431 ]
}
"127
[; ;tester.c: 127: _Bool testOK(_Bool active) {
[v _testOK `(a ~T0 @X0 1 ef1`a ]
{
[e :U _testOK ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"129
[; ;tester.c: 129:     _Bool result = 0;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `a ]
"130
[; ;tester.c: 130:     if (active) {
[e $ ! != -> _active `i -> 0 `i 437  ]
{
"132
[; ;tester.c: 132:         if (PORTDbits.RD2 == 0) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 0 `i 438  ]
{
"134
[; ;tester.c: 134:             result = 1;
[e = _result -> -> 1 `i `a ]
"135
[; ;tester.c: 135:         }
}
[e :U 438 ]
"136
[; ;tester.c: 136:     }
}
[e :U 437 ]
"138
[; ;tester.c: 138:     if (!active) {
[e $ ! ! != -> _active `i -> 0 `i 439  ]
{
"140
[; ;tester.c: 140:         if (PORTDbits.RD2 == 1) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 1 `i 440  ]
{
"142
[; ;tester.c: 142:             result = 1;
[e = _result -> -> 1 `i `a ]
"143
[; ;tester.c: 143:         }
}
[e :U 440 ]
"144
[; ;tester.c: 144:     }
}
[e :U 439 ]
"146
[; ;tester.c: 146:     return result;
[e ) _result ]
[e $UE 436  ]
"148
[; ;tester.c: 148: }
[e :UE 436 ]
}
"150
[; ;tester.c: 150: _Bool testNOK(_Bool active) {
[v _testNOK `(a ~T0 @X0 1 ef1`a ]
{
[e :U _testNOK ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"152
[; ;tester.c: 152:     _Bool result = 0;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `a ]
"153
[; ;tester.c: 153:     if (active) {
[e $ ! != -> _active `i -> 0 `i 442  ]
{
"155
[; ;tester.c: 155:         if (PORTDbits.RD7 == 0) {
[e $ ! == -> . . _PORTDbits 0 7 `i -> 0 `i 443  ]
{
"157
[; ;tester.c: 157:             result = 1;
[e = _result -> -> 1 `i `a ]
"158
[; ;tester.c: 158:         }
}
[e :U 443 ]
"159
[; ;tester.c: 159:     }
}
[e :U 442 ]
"161
[; ;tester.c: 161:     if (!active) {
[e $ ! ! != -> _active `i -> 0 `i 444  ]
{
"163
[; ;tester.c: 163:         if (PORTDbits.RD7 == 1) {
[e $ ! == -> . . _PORTDbits 0 7 `i -> 1 `i 445  ]
{
"165
[; ;tester.c: 165:             result = 1;
[e = _result -> -> 1 `i `a ]
"166
[; ;tester.c: 166:         }
}
[e :U 445 ]
"167
[; ;tester.c: 167:     }
}
[e :U 444 ]
"169
[; ;tester.c: 169:     return result;
[e ) _result ]
[e $UE 441  ]
"170
[; ;tester.c: 170: }
[e :UE 441 ]
}
"172
[; ;tester.c: 172: _Bool controlVisuel() {
[v _controlVisuel `(a ~T0 @X0 1 ef ]
{
[e :U _controlVisuel ]
[f ]
"174
[; ;tester.c: 174:     _Bool result = 0;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `a ]
"177
[; ;tester.c: 177:     if (PORTDbits.RD2 == 0) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 0 `i 447  ]
{
"179
[; ;tester.c: 179:         result = 1;
[e = _result -> -> 1 `i `a ]
"180
[; ;tester.c: 180:     }
}
[e :U 447 ]
"182
[; ;tester.c: 182:     if (PORTDbits.RD2 == 1) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 1 `i 448  ]
{
"184
[; ;tester.c: 184:         result = 0;
[e = _result -> -> 0 `i `a ]
"186
[; ;tester.c: 186:     }
}
[e :U 448 ]
"188
[; ;tester.c: 188: }
[e :UE 446 ]
}
"190
[; ;tester.c: 190: void ledNonConforme(_Bool active) {
[v _ledNonConforme `(v ~T0 @X0 1 ef1`a ]
{
[e :U _ledNonConforme ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"192
[; ;tester.c: 192:     if (active) {
[e $ ! != -> _active `i -> 0 `i 450  ]
{
"194
[; ;tester.c: 194:         do { LATEbits.LATE1 = 1; } while(0);
[e :U 453 ]
{
[e = . . _LATEbits 0 1 -> -> 1 `i `uc ]
}
[e :U 452 ]
"195
[; ;tester.c: 195:     } else {
}
[e $U 454  ]
[e :U 450 ]
{
"196
[; ;tester.c: 196:         do { LATEbits.LATE1 = 0; } while(0);
[e :U 457 ]
{
[e = . . _LATEbits 0 1 -> -> 0 `i `uc ]
}
[e :U 456 ]
"197
[; ;tester.c: 197:     }
}
[e :U 454 ]
"198
[; ;tester.c: 198: }
[e :UE 449 ]
}
"200
[; ;tester.c: 200: void ledConforme(_Bool active) {
[v _ledConforme `(v ~T0 @X0 1 ef1`a ]
{
[e :U _ledConforme ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"202
[; ;tester.c: 202:     if (active) {
[e $ ! != -> _active `i -> 0 `i 459  ]
{
"204
[; ;tester.c: 204:         do { LATEbits.LATE0 = 1; } while(0);
[e :U 462 ]
{
[e = . . _LATEbits 0 0 -> -> 1 `i `uc ]
}
[e :U 461 ]
"205
[; ;tester.c: 205:     } else {
}
[e $U 463  ]
[e :U 459 ]
{
"206
[; ;tester.c: 206:         do { LATEbits.LATE0 = 0; } while(0);
[e :U 466 ]
{
[e = . . _LATEbits 0 0 -> -> 0 `i `uc ]
}
[e :U 465 ]
"207
[; ;tester.c: 207:     }
}
[e :U 463 ]
"208
[; ;tester.c: 208: }
[e :UE 458 ]
}
"210
[; ;tester.c: 210: void ledProgession(_Bool active) {
[v _ledProgession `(v ~T0 @X0 1 ef1`a ]
{
[e :U _ledProgession ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"212
[; ;tester.c: 212:     if (active) {
[e $ ! != -> _active `i -> 0 `i 468  ]
{
"214
[; ;tester.c: 214:         do { LATEbits.LATE2 = 1; } while(0);
[e :U 471 ]
{
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
}
[e :U 470 ]
"216
[; ;tester.c: 216:     } else {
}
[e $U 472  ]
[e :U 468 ]
{
"218
[; ;tester.c: 218:         do { LATEbits.LATE2 = 0; } while(0);
[e :U 475 ]
{
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
}
[e :U 474 ]
"219
[; ;tester.c: 219:     }
}
[e :U 472 ]
"220
[; ;tester.c: 220: }
[e :UE 467 ]
}
"222
[; ;tester.c: 222: void alerteDefaut(char etape[], _Bool *testAct, _Bool *testVoy) {
[v _alerteDefaut `(v ~T0 @X0 1 ef3`*uc`*a`*a ]
{
[e :U _alerteDefaut ]
[v _etape `*uc ~T0 @X0 1 r1 ]
[v _testAct `*a ~T0 @X0 1 r2 ]
[v _testVoy `*a ~T0 @X0 1 r3 ]
[f ]
[v F3758 `uc ~T0 @X0 -> 20 `i s ]
[i F3758
:U ..
"224
[; ;tester.c: 224:     char error[20] = "-> ERREUR: ";
-> 45 `c
-> 62 `c
-> 32 `c
-> 69 `c
-> 82 `c
-> 82 `c
-> 69 `c
-> 85 `c
-> 82 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
[v _error `uc ~T0 @X0 -> 20 `i a ]
[e = _error F3758 ]
[v F3760 `uc ~T0 @X0 -> 10 `i s ]
[i F3760
:U ..
"225
[; ;tester.c: 225:     char eol[10] = "\r\n";
-> 13 `c
-> 10 `c
-> 0 `c
..
]
[v _eol `uc ~T0 @X0 -> 10 `i a ]
[e = _eol F3760 ]
"226
[; ;tester.c: 226:     ledNonConforme(1);
[e ( _ledNonConforme (1 -> -> 1 `i `a ]
"227
[; ;tester.c: 227:     ledProgession(1);
[e ( _ledProgession (1 -> -> 1 `i `a ]
"228
[; ;tester.c: 228:     ledConforme(0);
[e ( _ledConforme (1 -> -> 0 `i `a ]
"229
[; ;tester.c: 229:     alimenter(0);
[e ( _alimenter (1 -> -> 0 `i `a ]
"230
[; ;tester.c: 230:     displayManager(etape, "TEST NON CONFORME", "ATTENTE ACQUITTEMENT", "");
[e ( _displayManager (4 , , , _etape :s 1C :s 2C :s 3C ]
"231
[; ;tester.c: 231:     printf(strcat(strcat(error, etape), eol));
[e ( _printf -> ( _strcat (2 , ( _strcat (2 , &U _error -> _etape `*Cuc -> &U _eol `*Cuc `*Cuc ]
"232
[; ;tester.c: 232:     errorAlert();
[e ( _errorAlert ..  ]
"234
[; ;tester.c: 234:     while (PORTDbits.RD2 == 0) {
[e $U 477  ]
[e :U 478 ]
{
"236
[; ;tester.c: 236:     }
}
[e :U 477 ]
"234
[; ;tester.c: 234:     while (PORTDbits.RD2 == 0) {
[e $ == -> . . _PORTDbits 0 2 `i -> 0 `i 478  ]
[e :U 479 ]
"239
[; ;tester.c: 239:     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"240
[; ;tester.c: 240:     *testVoy = 0;
[e = *U _testVoy -> -> 0 `i `a ]
"242
[; ;tester.c: 242: }
[e :UE 476 ]
}
"244
[; ;tester.c: 244: _Bool reponseOperateur(_Bool automatique) {
[v _reponseOperateur `(a ~T0 @X0 1 ef1`a ]
{
[e :U _reponseOperateur ]
[v _automatique `a ~T0 @X0 1 r1 ]
[f ]
"246
[; ;tester.c: 246:     _Bool reponse = 0;
[v _reponse `a ~T0 @X0 1 a ]
[e = _reponse -> -> 0 `i `a ]
"247
[; ;tester.c: 247:     _Bool repOperateur = 0;
[v _repOperateur `a ~T0 @X0 1 a ]
[e = _repOperateur -> -> 0 `i `a ]
"248
[; ;tester.c: 248:     unsigned char reception;
[v _reception `uc ~T0 @X0 1 a ]
"250
[; ;tester.c: 250:     if (automatique) {
[e $ ! != -> _automatique `i -> 0 `i 481  ]
{
"252
[; ;tester.c: 252:         while (!repOperateur) {
[e $U 482  ]
[e :U 483 ]
{
"254
[; ;tester.c: 254:             if (eusartRxCount != 0) {
[e $ ! != -> _eusartRxCount `i -> 0 `i 485  ]
{
"256
[; ;tester.c: 256:                 reception = EUSART_Read();
[e = _reception ( _EUSART_Read ..  ]
"258
[; ;tester.c: 258:                 switch (reception)
[e $U 487  ]
"259
[; ;tester.c: 259:                 {
{
"262
[; ;tester.c: 262:                     case '0':
[e :U 488 ]
"263
[; ;tester.c: 263:                     {
{
"264
[; ;tester.c: 264:                         __asm("reset");
[; <" reset ;# ">
"266
[; ;tester.c: 266:                     }
}
"268
[; ;tester.c: 268:                     case '2':
[e :U 489 ]
"269
[; ;tester.c: 269:                     {
{
"271
[; ;tester.c: 271:                         _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"272
[; ;tester.c: 272:                         reponse = 1;
[e = _reponse -> -> 1 `i `a ]
"273
[; ;tester.c: 273:                         repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"274
[; ;tester.c: 274:                         break;
[e $U 486  ]
"275
[; ;tester.c: 275:                     }
}
"277
[; ;tester.c: 277:                     case '3':
[e :U 490 ]
"278
[; ;tester.c: 278:                     {
{
"280
[; ;tester.c: 280:                         _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"281
[; ;tester.c: 281:                         reponse = 0;
[e = _reponse -> -> 0 `i `a ]
"282
[; ;tester.c: 282:                         repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"283
[; ;tester.c: 283:                         break;
[e $U 486  ]
"284
[; ;tester.c: 284:                     }
}
"286
[; ;tester.c: 286:                     case '9':
[e :U 491 ]
"287
[; ;tester.c: 287:                     {
{
"289
[; ;tester.c: 289:                         _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"290
[; ;tester.c: 290:                         reponse = 1;
[e = _reponse -> -> 1 `i `a ]
"291
[; ;tester.c: 291:                         repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"292
[; ;tester.c: 292:                         do { LATAbits.LATA7 = 0; } while(0);
[e :U 494 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 493 ]
"293
[; ;tester.c: 293:                         break;
[e $U 486  ]
"294
[; ;tester.c: 294:                     }
}
"295
[; ;tester.c: 295:                 }
}
[e $U 486  ]
[e :U 487 ]
[e [\ -> _reception `i , $ -> -> 48 `ui `i 488
 , $ -> -> 50 `ui `i 489
 , $ -> -> 51 `ui `i 490
 , $ -> -> 57 `ui `i 491
 486 ]
[e :U 486 ]
"297
[; ;tester.c: 297:             }
}
[e :U 485 ]
"299
[; ;tester.c: 299:         }
}
[e :U 482 ]
"252
[; ;tester.c: 252:         while (!repOperateur) {
[e $ ! != -> _repOperateur `i -> 0 `i 483  ]
[e :U 484 ]
"301
[; ;tester.c: 301:     }
}
[e :U 481 ]
"303
[; ;tester.c: 303:     if (!automatique) {
[e $ ! ! != -> _automatique `i -> 0 `i 495  ]
{
"305
[; ;tester.c: 305:         while (!repOperateur) {
[e $U 496  ]
[e :U 497 ]
{
"307
[; ;tester.c: 307:             if (testNOK(1)) {
[e $ ! != -> ( _testNOK (1 -> -> 1 `i `a `i -> 0 `i 499  ]
{
"308
[; ;tester.c: 308:                 reponse = 0;
[e = _reponse -> -> 0 `i `a ]
"309
[; ;tester.c: 309:                 repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"310
[; ;tester.c: 310:             }
}
[e :U 499 ]
"311
[; ;tester.c: 311:             if (testOK(1)) {
[e $ ! != -> ( _testOK (1 -> -> 1 `i `a `i -> 0 `i 500  ]
{
"312
[; ;tester.c: 312:                 reponse = 1;
[e = _reponse -> -> 1 `i `a ]
"313
[; ;tester.c: 313:                 repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"314
[; ;tester.c: 314:             }
}
[e :U 500 ]
"315
[; ;tester.c: 315:         }
}
[e :U 496 ]
"305
[; ;tester.c: 305:         while (!repOperateur) {
[e $ ! != -> _repOperateur `i -> 0 `i 497  ]
[e :U 498 ]
"317
[; ;tester.c: 317:     }
}
[e :U 495 ]
"319
[; ;tester.c: 319:     return reponse;
[e ) _reponse ]
[e $UE 480  ]
"321
[; ;tester.c: 321: }
[e :UE 480 ]
}
"323
[; ;tester.c: 323: void setP1(_Bool active) {
[v _setP1 `(v ~T0 @X0 1 ef1`a ]
{
[e :U _setP1 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"325
[; ;tester.c: 325:     if (active) {
[e $ ! != -> _active `i -> 0 `i 502  ]
{
"327
[; ;tester.c: 327:         do { LATAbits.LATA4 = 1; } while(0);
[e :U 505 ]
{
[e = . . _LATAbits 0 4 -> -> 1 `i `uc ]
}
[e :U 504 ]
"328
[; ;tester.c: 328:     } else {
}
[e $U 506  ]
[e :U 502 ]
{
"329
[; ;tester.c: 329:         do { LATAbits.LATA4 = 0; } while(0);
[e :U 509 ]
{
[e = . . _LATAbits 0 4 -> -> 0 `i `uc ]
}
[e :U 508 ]
"330
[; ;tester.c: 330:     }
}
[e :U 506 ]
"332
[; ;tester.c: 332: }
[e :UE 501 ]
}
"334
[; ;tester.c: 334: void setP2(_Bool active) {
[v _setP2 `(v ~T0 @X0 1 ef1`a ]
{
[e :U _setP2 ]
[v _active `a ~T0 @X0 1 r1 ]
[f ]
"336
[; ;tester.c: 336:     if (active) {
[e $ ! != -> _active `i -> 0 `i 511  ]
{
"338
[; ;tester.c: 338:         do { LATAbits.LATA5 = 1; } while(0);
[e :U 514 ]
{
[e = . . _LATAbits 0 5 -> -> 1 `i `uc ]
}
[e :U 513 ]
"339
[; ;tester.c: 339:     } else {
}
[e $U 515  ]
[e :U 511 ]
{
"340
[; ;tester.c: 340:         do { LATAbits.LATA5 = 0; } while(0);
[e :U 518 ]
{
[e = . . _LATAbits 0 5 -> -> 0 `i `uc ]
}
[e :U 517 ]
"341
[; ;tester.c: 341:     }
}
[e :U 515 ]
"343
[; ;tester.c: 343: }
[e :UE 510 ]
}
"345
[; ;tester.c: 345: void initialConditions(_Bool *testAct, _Bool *testVoy, _Bool *autom, _Bool *prog) {
[v _initialConditions `(v ~T0 @X0 1 ef4`*a`*a`*a`*a ]
{
[e :U _initialConditions ]
[v _testAct `*a ~T0 @X0 1 r1 ]
[v _testVoy `*a ~T0 @X0 1 r2 ]
[v _autom `*a ~T0 @X0 1 r3 ]
[v _prog `*a ~T0 @X0 1 r4 ]
[f ]
"347
[; ;tester.c: 347:     if (!*autom) {
[e $ ! ! != -> *U _autom `i -> 0 `i 520  ]
{
"349
[; ;tester.c: 349:         printf("-> FIN TEST MANUEL\r\n");
[e ( _printf :s 4C ]
"350
[; ;tester.c: 350:     }
}
[e :U 520 ]
"351
[; ;tester.c: 351:     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"352
[; ;tester.c: 352:     *testVoy = 0;
[e = *U _testVoy -> -> 0 `i `a ]
"353
[; ;tester.c: 353:     *autom = 0;
[e = *U _autom -> -> 0 `i `a ]
"354
[; ;tester.c: 354:     *prog = 1;
[e = *U _prog -> -> 1 `i `a ]
"355
[; ;tester.c: 355:     ledConforme(0);
[e ( _ledConforme (1 -> -> 0 `i `a ]
"356
[; ;tester.c: 356:     ledNonConforme(0);
[e ( _ledNonConforme (1 -> -> 0 `i `a ]
"357
[; ;tester.c: 357:     ledProgession(0);
[e ( _ledProgession (1 -> -> 0 `i `a ]
"358
[; ;tester.c: 358:     alimenter(0);
[e ( _alimenter (1 -> -> 0 `i `a ]
"359
[; ;tester.c: 359:     pressBP1(0);
[e ( _pressBP1 (1 -> -> 0 `i `a ]
"360
[; ;tester.c: 360:     pressBP2(0);
[e ( _pressBP2 (1 -> -> 0 `i `a ]
"361
[; ;tester.c: 361:     setP1(0);
[e ( _setP1 (1 -> -> 0 `i `a ]
"362
[; ;tester.c: 362:     setP2(0);
[e ( _setP2 (1 -> -> 0 `i `a ]
"363
[; ;tester.c: 363:     do { LATAbits.LATA7 = 0; } while(0);
[e :U 523 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 522 ]
"365
[; ;tester.c: 365: }
[e :UE 519 ]
}
"367
[; ;tester.c: 367: void activerBuzzer() {
[v _activerBuzzer `(v ~T0 @X0 1 ef ]
{
[e :U _activerBuzzer ]
[f ]
"370
[; ;tester.c: 370:     for (int i = 0; i < 50; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 50 `i 525  ]
[e $U 526  ]
[e :U 525 ]
{
"372
[; ;tester.c: 372:         do { LATBbits.LATB4 = 1; } while(0);
[e :U 530 ]
{
[e = . . _LATBbits 0 4 -> -> 1 `i `uc ]
}
[e :U 529 ]
"374
[; ;tester.c: 374:         _delay((unsigned long)((1000)*(16000000/4000000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"376
[; ;tester.c: 376:         do { LATBbits.LATB4 = 0; } while(0);
[e :U 533 ]
{
[e = . . _LATBbits 0 4 -> -> 0 `i `uc ]
}
[e :U 532 ]
"378
[; ;tester.c: 378:         _delay((unsigned long)((1000)*(16000000/4000000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"380
[; ;tester.c: 380:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 50 `i 525  ]
[e :U 526 ]
}
"382
[; ;tester.c: 382: }
[e :UE 524 ]
}
"384
[; ;tester.c: 384: void activerTouche(void) {
[v _activerTouche `(v ~T0 @X0 1 ef ]
{
[e :U _activerTouche ]
[f ]
"386
[; ;tester.c: 386:     do { LATAbits.LATA6 = 1; } while(0);
[e :U 537 ]
{
[e = . . _LATAbits 0 6 -> -> 1 `i `uc ]
}
[e :U 536 ]
"387
[; ;tester.c: 387:     _delay((unsigned long)((250)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"388
[; ;tester.c: 388:     do { LATAbits.LATA6 = 0; } while(0);
[e :U 540 ]
{
[e = . . _LATAbits 0 6 -> -> 0 `i `uc ]
}
[e :U 539 ]
"389
[; ;tester.c: 389:     _delay((unsigned long)((250)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"391
[; ;tester.c: 391: }
[e :UE 534 ]
}
"393
[; ;tester.c: 393: void startAlert(void) {
[v _startAlert `(v ~T0 @X0 1 ef ]
{
[e :U _startAlert ]
[f ]
"395
[; ;tester.c: 395:     for (int i = 0; i < 2; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 2 `i 542  ]
[e $U 543  ]
[e :U 542 ]
{
"397
[; ;tester.c: 397:         activerBuzzer();
[e ( _activerBuzzer ..  ]
"398
[; ;tester.c: 398:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"400
[; ;tester.c: 400:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 2 `i 542  ]
[e :U 543 ]
}
"402
[; ;tester.c: 402: }
[e :UE 541 ]
}
"404
[; ;tester.c: 404: void errorAlert(void) {
[v _errorAlert `(v ~T0 @X0 1 ef ]
{
[e :U _errorAlert ]
[f ]
"406
[; ;tester.c: 406:     for (int j = 0; j < 4; j++) {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 4 `i 546  ]
[e $U 547  ]
[e :U 546 ]
{
"408
[; ;tester.c: 408:         for (int i = 0; i < 4; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 4 `i 549  ]
[e $U 550  ]
[e :U 549 ]
{
"410
[; ;tester.c: 410:             activerBuzzer();
[e ( _activerBuzzer ..  ]
"411
[; ;tester.c: 411:             _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"413
[; ;tester.c: 413:         }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 4 `i 549  ]
[e :U 550 ]
}
"414
[; ;tester.c: 414:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"415
[; ;tester.c: 415:     }
}
[e ++ _j -> 1 `i ]
[e $ < _j -> 4 `i 546  ]
[e :U 547 ]
}
"418
[; ;tester.c: 418: }
[e :UE 545 ]
}
"420
[; ;tester.c: 420: void okAlert(void) {
[v _okAlert `(v ~T0 @X0 1 ef ]
{
[e :U _okAlert ]
[f ]
"423
[; ;tester.c: 423:     printf("-> TEST CONFORME - ATTENTE ACQUITTEMENT\r\n");
[e ( _printf :s 5C ]
"424
[; ;tester.c: 424:     for (int i = 0; i < 2; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 2 `i 553  ]
[e $U 554  ]
[e :U 553 ]
{
"426
[; ;tester.c: 426:         startAlert();
[e ( _startAlert ..  ]
"428
[; ;tester.c: 428:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 2 `i 553  ]
[e :U 554 ]
}
"431
[; ;tester.c: 431: }
[e :UE 552 ]
}
"433
[; ;tester.c: 433: void attenteDemarrage3(_Bool *autom, _Bool *testAct, _Bool *prog, _Bool *testSlaveActive) {
[v _attenteDemarrage3 `(v ~T0 @X0 1 ef4`*a`*a`*a`*a ]
{
[e :U _attenteDemarrage3 ]
[v _autom `*a ~T0 @X0 1 r1 ]
[v _testAct `*a ~T0 @X0 1 r2 ]
[v _prog `*a ~T0 @X0 1 r3 ]
[v _testSlaveActive `*a ~T0 @X0 1 r4 ]
[f ]
"435
[; ;tester.c: 435:     unsigned char reception;
[v _reception `uc ~T0 @X0 1 a ]
"436
[; ;tester.c: 436:     _Bool repOperateur = 0;
[v _repOperateur `a ~T0 @X0 1 a ]
[e = _repOperateur -> -> 0 `i `a ]
"438
[; ;tester.c: 438:     while (!repOperateur) {
[e $U 557  ]
[e :U 558 ]
{
"441
[; ;tester.c: 441:         if (PORTDbits.RD2 == 0) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 0 `i 560  ]
{
"443
[; ;tester.c: 443:             printf("-> TEST MANUEL EN COURS\r\n");
[e ( _printf :s 6C ]
"444
[; ;tester.c: 444:             repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"445
[; ;tester.c: 445:             *autom = 0;
[e = *U _autom -> -> 0 `i `a ]
"446
[; ;tester.c: 446:             *prog = 0;
[e = *U _prog -> -> 0 `i `a ]
"447
[; ;tester.c: 447:             *testAct = 1;
[e = *U _testAct -> -> 1 `i `a ]
"448
[; ;tester.c: 448:         }
}
[e :U 560 ]
"450
[; ;tester.c: 450:         if (eusartRxCount != 0) {
[e $ ! != -> _eusartRxCount `i -> 0 `i 561  ]
{
"452
[; ;tester.c: 452:             reception = EUSART_Read();
[e = _reception ( _EUSART_Read ..  ]
"454
[; ;tester.c: 454:             switch (reception)
[e $U 563  ]
"455
[; ;tester.c: 455:             {
{
"457
[; ;tester.c: 457:                 case '0':
[e :U 564 ]
"458
[; ;tester.c: 458:                 {
{
"459
[; ;tester.c: 459:                     __asm("reset");
[; <" reset ;# ">
"461
[; ;tester.c: 461:                 }
}
"463
[; ;tester.c: 463:                 case '1':
[e :U 565 ]
"464
[; ;tester.c: 464:                 {
{
"465
[; ;tester.c: 465:                     printf("-> TEST ON\r\n");
[e ( _printf :s 7C ]
"466
[; ;tester.c: 466:                     *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"467
[; ;tester.c: 467:                     *testAct = 1;
[e = *U _testAct -> -> 1 `i `a ]
"468
[; ;tester.c: 468:                     *prog = 0;
[e = *U _prog -> -> 0 `i `a ]
"469
[; ;tester.c: 469:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"470
[; ;tester.c: 470:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"471
[; ;tester.c: 471:                     break;
[e $U 562  ]
"472
[; ;tester.c: 472:                 }
}
"474
[; ;tester.c: 474:                 case '6':
[e :U 566 ]
"475
[; ;tester.c: 475:                 {
{
"476
[; ;tester.c: 476:                     printf("-> ERREUR PROGRAMMATION\r\n");
[e ( _printf :s 8C ]
"477
[; ;tester.c: 477:                     displayManager("TEST CARTE D925ED4", "", "ERREUR PROGRAMMATION", "");
[e ( _displayManager (4 , , , :s 9C :s 10C :s 11C :s 12C ]
"478
[; ;tester.c: 478:                     *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"479
[; ;tester.c: 479:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"480
[; ;tester.c: 480:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"481
[; ;tester.c: 481:                     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"482
[; ;tester.c: 482:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 569 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 568 ]
"483
[; ;tester.c: 483:                     break;
[e $U 562  ]
"484
[; ;tester.c: 484:                 }
}
"486
[; ;tester.c: 486:                 case '7':
[e :U 570 ]
"487
[; ;tester.c: 487:                 {
{
"488
[; ;tester.c: 488:                     printf("-> PROGRAMMATION EN COURS\r\n");
[e ( _printf :s 13C ]
"489
[; ;tester.c: 489:                     displayManager("TEST CARTE D925ED4", "", "PROGRAMMATION", "");
[e ( _displayManager (4 , , , :s 14C :s 15C :s 16C :s 17C ]
"490
[; ;tester.c: 490:                     *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"491
[; ;tester.c: 491:                     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"492
[; ;tester.c: 492:                     *prog = 0;
[e = *U _prog -> -> 0 `i `a ]
"493
[; ;tester.c: 493:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"494
[; ;tester.c: 494:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"495
[; ;tester.c: 495:                     do { LATAbits.LATA7 = 1; } while(0);
[e :U 573 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 572 ]
"496
[; ;tester.c: 496:                     break;
[e $U 562  ]
"497
[; ;tester.c: 497:                 }
}
"499
[; ;tester.c: 499:                 case '9':
[e :U 574 ]
"500
[; ;tester.c: 500:                 {
{
"501
[; ;tester.c: 501:                     printf("-> PROGRAMMATION TERMINEE\r\n");
[e ( _printf :s 18C ]
"502
[; ;tester.c: 502:                     displayManager("TEST CARTE D925ED4", "", "FIN PROGRAMMATION", "");
[e ( _displayManager (4 , , , :s 19C :s 20C :s 21C :s 22C ]
"503
[; ;tester.c: 503:                     *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"504
[; ;tester.c: 504:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"505
[; ;tester.c: 505:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"506
[; ;tester.c: 506:                     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"507
[; ;tester.c: 507:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 577 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 576 ]
"508
[; ;tester.c: 508:                     break;
[e $U 562  ]
"509
[; ;tester.c: 509:                 }
}
"511
[; ;tester.c: 511:                 case '8':
[e :U 578 ]
"512
[; ;tester.c: 512:                 {
{
"513
[; ;tester.c: 513:                     printf("-> EFFACEMENT EN COURS\r\n");
[e ( _printf :s 23C ]
"514
[; ;tester.c: 514:                     displayManager("TEST CARTE D925ED4", "", "EFFACEMENT", "");
[e ( _displayManager (4 , , , :s 24C :s 25C :s 26C :s 27C ]
"515
[; ;tester.c: 515:                     *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"516
[; ;tester.c: 516:                     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"517
[; ;tester.c: 517:                     *prog = 1;
[e = *U _prog -> -> 1 `i `a ]
"518
[; ;tester.c: 518:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"519
[; ;tester.c: 519:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"520
[; ;tester.c: 520:                     do { LATAbits.LATA7 = 1; } while(0);
[e :U 581 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 580 ]
"521
[; ;tester.c: 521:                     break;
[e $U 562  ]
"522
[; ;tester.c: 522:                 }
}
"524
[; ;tester.c: 524:                 case '5':
[e :U 582 ]
"525
[; ;tester.c: 525:                 {
{
"526
[; ;tester.c: 526:                     printf("-> EFFACEMENT TERMINE\r\n");
[e ( _printf :s 28C ]
"527
[; ;tester.c: 527:                     displayManager("TEST CARTE D925ED4", "", "FIN EFFACEMENT", "");
[e ( _displayManager (4 , , , :s 29C :s 30C :s 31C :s 32C ]
"528
[; ;tester.c: 528:                     *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"529
[; ;tester.c: 529:                     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"530
[; ;tester.c: 530:                     *prog = 1;
[e = *U _prog -> -> 1 `i `a ]
"531
[; ;tester.c: 531:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"532
[; ;tester.c: 532:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"533
[; ;tester.c: 533:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 585 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 584 ]
"534
[; ;tester.c: 534:                     break;
[e $U 562  ]
"535
[; ;tester.c: 535:                 }
}
"537
[; ;tester.c: 537:                 case 'a':
[e :U 586 ]
"538
[; ;tester.c: 538:                 {
{
"539
[; ;tester.c: 539:                     char responseSlave = startTestSlave();
[v _responseSlave `uc ~T0 @X0 1 a ]
[e = _responseSlave ( _startTestSlave ..  ]
"540
[; ;tester.c: 540:                     if (responseSlave == 'a') {
[e $ ! == -> _responseSlave `ui -> 97 `ui 587  ]
{
"542
[; ;tester.c: 542:                         printf("-> SLAVE_TEST ON\r\n");
[e ( _printf :s 33C ]
"543
[; ;tester.c: 543:                         *autom = 1;
[e = *U _autom -> -> 1 `i `a ]
"544
[; ;tester.c: 544:                         *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"545
[; ;tester.c: 545:                         *testSlaveActive = 1;
[e = *U _testSlaveActive -> -> 1 `i `a ]
"546
[; ;tester.c: 546:                         *prog = 0;
[e = *U _prog -> -> 0 `i `a ]
"547
[; ;tester.c: 547:                         _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"548
[; ;tester.c: 548:                         repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"550
[; ;tester.c: 550:                     } else {
}
[e $U 588  ]
[e :U 587 ]
{
"552
[; ;tester.c: 552:                         printf("-> SLAVE RESPONSE NULL\r\n");
[e ( _printf :s 34C ]
"553
[; ;tester.c: 553:                         repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"555
[; ;tester.c: 555:                     }
}
[e :U 588 ]
"557
[; ;tester.c: 557:                     break;
[e $U 562  ]
"558
[; ;tester.c: 558:                 }
}
"560
[; ;tester.c: 560:             }
}
[e $U 562  ]
[e :U 563 ]
[e [\ -> _reception `i , $ -> -> 48 `ui `i 564
 , $ -> -> 49 `ui `i 565
 , $ -> -> 54 `ui `i 566
 , $ -> -> 55 `ui `i 570
 , $ -> -> 57 `ui `i 574
 , $ -> -> 56 `ui `i 578
 , $ -> -> 53 `ui `i 582
 , $ -> -> 97 `ui `i 586
 562 ]
[e :U 562 ]
"561
[; ;tester.c: 561:         }
}
[e :U 561 ]
"565
[; ;tester.c: 565:         if (*testSlaveActive) {
[e $ ! != -> *U _testSlaveActive `i -> 0 `i 589  ]
{
"567
[; ;tester.c: 567:             char repSlave = getSlaveStatus('?');
[v _repSlave `uc ~T0 @X0 1 a ]
[e = _repSlave ( _getSlaveStatus (1 -> -> 63 `ui `uc ]
"568
[; ;tester.c: 568:             processSlaveResponse(repSlave);
[e ( _processSlaveResponse (1 _repSlave ]
"569
[; ;tester.c: 569:             _delay((unsigned long)((200)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"571
[; ;tester.c: 571:         }
}
[e :U 589 ]
"574
[; ;tester.c: 574:     }
}
[e :U 557 ]
"438
[; ;tester.c: 438:     while (!repOperateur) {
[e $ ! != -> _repOperateur `i -> 0 `i 558  ]
[e :U 559 ]
"576
[; ;tester.c: 576: }
[e :UE 556 ]
}
"578
[; ;tester.c: 578: void attenteAquittement(_Bool *autom, _Bool *testAct) {
[v _attenteAquittement `(v ~T0 @X0 1 ef2`*a`*a ]
{
[e :U _attenteAquittement ]
[v _autom `*a ~T0 @X0 1 r1 ]
[v _testAct `*a ~T0 @X0 1 r2 ]
[f ]
"580
[; ;tester.c: 580:     unsigned char reception;
[v _reception `uc ~T0 @X0 1 a ]
"581
[; ;tester.c: 581:     _Bool repOperateur = 0;
[v _repOperateur `a ~T0 @X0 1 a ]
[e = _repOperateur -> -> 0 `i `a ]
"583
[; ;tester.c: 583:     while (!repOperateur) {
[e $U 591  ]
[e :U 592 ]
{
"586
[; ;tester.c: 586:         if (PORTDbits.RD2 == 0) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 0 `i 594  ]
{
"588
[; ;tester.c: 588:             printf("-> FIN TEST MANUEL\r\n");
[e ( _printf :s 35C ]
"589
[; ;tester.c: 589:             repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"590
[; ;tester.c: 590:             *autom = 0;
[e = *U _autom -> -> 0 `i `a ]
"591
[; ;tester.c: 591:             *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"592
[; ;tester.c: 592:         }
}
[e :U 594 ]
"594
[; ;tester.c: 594:         if (eusartRxCount != 0) {
[e $ ! != -> _eusartRxCount `i -> 0 `i 595  ]
{
"596
[; ;tester.c: 596:             reception = EUSART_Read();
[e = _reception ( _EUSART_Read ..  ]
"598
[; ;tester.c: 598:             switch (reception)
[e $U 597  ]
"599
[; ;tester.c: 599:             {
{
"601
[; ;tester.c: 601:                 case '0':
[e :U 598 ]
"602
[; ;tester.c: 602:                 {
{
"603
[; ;tester.c: 603:                     __asm("reset");
[; <" reset ;# ">
"604
[; ;tester.c: 604:                     break;
[e $U 596  ]
"606
[; ;tester.c: 606:                 }
}
"608
[; ;tester.c: 608:                 case '4':
[e :U 599 ]
"609
[; ;tester.c: 609:                 {
{
"610
[; ;tester.c: 610:                     printf("-> TEST ACQUITTE\r\n");
[e ( _printf :s 36C ]
"611
[; ;tester.c: 611:                     *autom = 0;
[e = *U _autom -> -> 0 `i `a ]
"612
[; ;tester.c: 612:                     *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"613
[; ;tester.c: 613:                     _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"614
[; ;tester.c: 614:                     repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"615
[; ;tester.c: 615:                     break;
[e $U 596  ]
"616
[; ;tester.c: 616:                 }
}
"617
[; ;tester.c: 617:             }
}
[e $U 596  ]
[e :U 597 ]
[e [\ -> _reception `i , $ -> -> 48 `ui `i 598
 , $ -> -> 52 `ui `i 599
 596 ]
[e :U 596 ]
"618
[; ;tester.c: 618:         }
}
[e :U 595 ]
"619
[; ;tester.c: 619:     }
}
[e :U 591 ]
"583
[; ;tester.c: 583:     while (!repOperateur) {
[e $ ! != -> _repOperateur `i -> 0 `i 592  ]
[e :U 593 ]
"621
[; ;tester.c: 621: }
[e :UE 590 ]
}
"623
[; ;tester.c: 623: void sortieErreur(_Bool *autom, _Bool *testAct, _Bool *testVoy, _Bool *prog) {
[v _sortieErreur `(v ~T0 @X0 1 ef4`*a`*a`*a`*a ]
{
[e :U _sortieErreur ]
[v _autom `*a ~T0 @X0 1 r1 ]
[v _testAct `*a ~T0 @X0 1 r2 ]
[v _testVoy `*a ~T0 @X0 1 r3 ]
[v _prog `*a ~T0 @X0 1 r4 ]
[f ]
"625
[; ;tester.c: 625:     attenteAquittement(*autom, *testAct);
[e ( _attenteAquittement (2 , -> *U _autom `*a -> *U _testAct `*a ]
"626
[; ;tester.c: 626:     initialConditions(*testAct, *testVoy, *autom, *prog);
[e ( _initialConditions (4 , , , -> *U _testAct `*a -> *U _testVoy `*a -> *U _autom `*a -> *U _prog `*a ]
"627
[; ;tester.c: 627:     _delay((unsigned long)((2000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"629
[; ;tester.c: 629: }
[e :UE 600 ]
}
"631
[; ;tester.c: 631: void alerteDefautEtape16(char etape[], _Bool *testAct, _Bool *testVoy, _Bool *autom, _Bool *prog) {
[v _alerteDefautEtape16 `(v ~T0 @X0 1 ef5`*uc`*a`*a`*a`*a ]
{
[e :U _alerteDefautEtape16 ]
[v _etape `*uc ~T0 @X0 1 r1 ]
[v _testAct `*a ~T0 @X0 1 r2 ]
[v _testVoy `*a ~T0 @X0 1 r3 ]
[v _autom `*a ~T0 @X0 1 r4 ]
[v _prog `*a ~T0 @X0 1 r5 ]
[f ]
[v F3811 `uc ~T0 @X0 -> 20 `i s ]
[i F3811
:U ..
"633
[; ;tester.c: 633:     char error[20] = "-> ERREUR: ";
-> 45 `c
-> 62 `c
-> 32 `c
-> 69 `c
-> 82 `c
-> 82 `c
-> 69 `c
-> 85 `c
-> 82 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
[v _error `uc ~T0 @X0 -> 20 `i a ]
[e = _error F3811 ]
[v F3813 `uc ~T0 @X0 -> 10 `i s ]
[i F3813
:U ..
"634
[; ;tester.c: 634:     char eol[10] = "\r\n";
-> 13 `c
-> 10 `c
-> 0 `c
..
]
[v _eol `uc ~T0 @X0 -> 10 `i a ]
[e = _eol F3813 ]
"635
[; ;tester.c: 635:     ledNonConforme(1);
[e ( _ledNonConforme (1 -> -> 1 `i `a ]
"636
[; ;tester.c: 636:     ledProgession(1);
[e ( _ledProgession (1 -> -> 1 `i `a ]
"637
[; ;tester.c: 637:     ledConforme(0);
[e ( _ledConforme (1 -> -> 0 `i `a ]
"639
[; ;tester.c: 639:     displayManager(etape, "TEST NON CONFORME", "VERIFIER P1 ET P2", "PRESSER OK OU ERREUR");
[e ( _displayManager (4 , , , _etape :s 37C :s 38C :s 39C ]
"640
[; ;tester.c: 640:     printf(strcat(strcat(error, etape), eol));
[e ( _printf -> ( _strcat (2 , ( _strcat (2 , &U _error -> _etape `*Cuc -> &U _eol `*Cuc `*Cuc ]
"641
[; ;tester.c: 641:     errorAlert();
[e ( _errorAlert ..  ]
"643
[; ;tester.c: 643:     _Bool reponse = reponseOperateur(*autom);
[v _reponse `a ~T0 @X0 1 a ]
[e = _reponse ( _reponseOperateur (1 *U _autom ]
"644
[; ;tester.c: 644:     _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"645
[; ;tester.c: 645:     if (reponse) {
[e $ ! != -> _reponse `i -> 0 `i 602  ]
{
"648
[; ;tester.c: 648:         *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"649
[; ;tester.c: 649:         *testVoy = 0;
[e = *U _testVoy -> -> 0 `i `a ]
"651
[; ;tester.c: 651:         displayManager("ETAPE 16", "NON CONFORME", "RESULTAT CONFIRME", "ATTENTE ACQUITTEMENT");
[e ( _displayManager (4 , , , :s 40C :s 41C :s 42C :s 43C ]
"652
[; ;tester.c: 652:         sortieErreur(&autom, &testAct, &testVoy, &prog);
[e ( _sortieErreur (4 , , , -> &U _autom `*a -> &U _testAct `*a -> &U _testVoy `*a -> &U _prog `*a ]
"654
[; ;tester.c: 654:     } else {
}
[e $U 603  ]
[e :U 602 ]
{
"656
[; ;tester.c: 656:         displayManager("ETAPE 16", "TEST P1", "", "");
[e ( _displayManager (4 , , , :s 44C :s 45C :s 46C :s 47C ]
"657
[; ;tester.c: 657:         ledNonConforme(0);
[e ( _ledNonConforme (1 -> -> 0 `i `a ]
"658
[; ;tester.c: 658:         ledProgession(1);
[e ( _ledProgession (1 -> -> 1 `i `a ]
"659
[; ;tester.c: 659:         ledConforme(0);
[e ( _ledConforme (1 -> -> 0 `i `a ]
"660
[; ;tester.c: 660:         setP1(1);
[e ( _setP1 (1 -> -> 1 `i `a ]
"661
[; ;tester.c: 661:         _delay((unsigned long)((1200)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1200 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"662
[; ;tester.c: 662:         setP1(0);
[e ( _setP1 (1 -> -> 0 `i `a ]
"663
[; ;tester.c: 663:         _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"664
[; ;tester.c: 664:         if (testR1(1) && testR2(1) && testR3(1)) {
[e $ ! && && != -> ( _testR1 (1 -> -> 1 `i `a `i -> 0 `i != -> ( _testR2 (1 -> -> 1 `i `a `i -> 0 `i != -> ( _testR3 (1 -> -> 1 `i `a `i -> 0 `i 604  ]
{
"666
[; ;tester.c: 666:             displayManager("ETAPE 16", "TEST P1", "ERREUR VALIDEE", "TEST OK");
[e ( _displayManager (4 , , , :s 48C :s 49C :s 50C :s 51C ]
"668
[; ;tester.c: 668:         } else {
}
[e $U 605  ]
[e :U 604 ]
{
"670
[; ;tester.c: 670:             *testAct = 0;
[e = *U _testAct -> -> 0 `i `a ]
"671
[; ;tester.c: 671:             alerteDefaut("ETAPE 16", &testAct, &testVoy);
[e ( _alerteDefaut (3 , , :s 52C -> &U _testAct `*a -> &U _testVoy `*a ]
"672
[; ;tester.c: 672:             sortieErreur(&autom, &testAct, &testVoy, &prog);
[e ( _sortieErreur (4 , , , -> &U _autom `*a -> &U _testAct `*a -> &U _testVoy `*a -> &U _prog `*a ]
"673
[; ;tester.c: 673:         }
}
[e :U 605 ]
"675
[; ;tester.c: 675:     }
}
[e :U 603 ]
"678
[; ;tester.c: 678: }
[e :UE 601 ]
}
"680
[; ;tester.c: 680: void marchePAP() {
[v _marchePAP `(v ~T0 @X0 1 ef ]
{
[e :U _marchePAP ]
[f ]
"682
[; ;tester.c: 682:     _Bool repOperateur = 0;
[v _repOperateur `a ~T0 @X0 1 a ]
[e = _repOperateur -> -> 0 `i `a ]
"683
[; ;tester.c: 683:     printf("-> Appuyer sur OK\r\n");
[e ( _printf :s 53C ]
"684
[; ;tester.c: 684:     while (!repOperateur) {
[e $U 607  ]
[e :U 608 ]
{
"687
[; ;tester.c: 687:         if (PORTDbits.RD2 == 0) {
[e $ ! == -> . . _PORTDbits 0 2 `i -> 0 `i 610  ]
{
"689
[; ;tester.c: 689:             repOperateur = 1;
[e = _repOperateur -> -> 1 `i `a ]
"690
[; ;tester.c: 690:         }
}
[e :U 610 ]
"691
[; ;tester.c: 691:     }
}
[e :U 607 ]
"684
[; ;tester.c: 684:     while (!repOperateur) {
[e $ ! != -> _repOperateur `i -> 0 `i 608  ]
[e :U 609 ]
"692
[; ;tester.c: 692: }
[e :UE 606 ]
}
"694
[; ;tester.c: 694: void processSlaveResponse(char repSlave) {
[v _processSlaveResponse `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _processSlaveResponse ]
[v _repSlave `uc ~T0 @X0 1 r1 ]
[f ]
"697
[; ;tester.c: 697:     switch (repSlave)
[e $U 613  ]
"698
[; ;tester.c: 698:     {
{
"700
[; ;tester.c: 700:         case 'z':
[e :U 614 ]
"701
[; ;tester.c: 701:         {
{
"702
[; ;tester.c: 702:             printf("-> SLAVE EN ATTENTE:");
[e ( _printf :s 54C ]
"703
[; ;tester.c: 703:             break;
[e $U 612  ]
"704
[; ;tester.c: 704:         }
}
"706
[; ;tester.c: 706:         case 'A':
[e :U 615 ]
"707
[; ;tester.c: 707:         {
{
"708
[; ;tester.c: 708:             printf("-> SLAVETEST:1:1");
[e ( _printf :s 55C ]
"709
[; ;tester.c: 709:             break;
[e $U 612  ]
"711
[; ;tester.c: 711:         }
}
"713
[; ;tester.c: 713:         case 'a':
[e :U 616 ]
"714
[; ;tester.c: 714:         {
{
"715
[; ;tester.c: 715:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 56C ]
"716
[; ;tester.c: 716:             break;
[e $U 612  ]
"717
[; ;tester.c: 717:         }
}
"721
[; ;tester.c: 721:         case 'B':
[e :U 617 ]
"722
[; ;tester.c: 722:         {
{
"723
[; ;tester.c: 723:             printf("-> SLAVETEST:2:1");
[e ( _printf :s 57C ]
"724
[; ;tester.c: 724:             break;
[e $U 612  ]
"726
[; ;tester.c: 726:         }
}
"728
[; ;tester.c: 728:         case 'b':
[e :U 618 ]
"729
[; ;tester.c: 729:         {
{
"730
[; ;tester.c: 730:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 58C ]
"731
[; ;tester.c: 731:             break;
[e $U 612  ]
"732
[; ;tester.c: 732:         }
}
"734
[; ;tester.c: 734:         case 'C':
[e :U 619 ]
"735
[; ;tester.c: 735:         {
{
"736
[; ;tester.c: 736:             printf("-> SLAVETEST:3:1");
[e ( _printf :s 59C ]
"737
[; ;tester.c: 737:             break;
[e $U 612  ]
"739
[; ;tester.c: 739:         }
}
"741
[; ;tester.c: 741:         case 'c':
[e :U 620 ]
"742
[; ;tester.c: 742:         {
{
"743
[; ;tester.c: 743:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 60C ]
"744
[; ;tester.c: 744:             break;
[e $U 612  ]
"745
[; ;tester.c: 745:         }
}
"747
[; ;tester.c: 747:         case 'D':
[e :U 621 ]
"748
[; ;tester.c: 748:         {
{
"749
[; ;tester.c: 749:             printf("-> SLAVETEST:4:1");
[e ( _printf :s 61C ]
"750
[; ;tester.c: 750:             break;
[e $U 612  ]
"752
[; ;tester.c: 752:         }
}
"754
[; ;tester.c: 754:         case 'd':
[e :U 622 ]
"755
[; ;tester.c: 755:         {
{
"756
[; ;tester.c: 756:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 62C ]
"757
[; ;tester.c: 757:             break;
[e $U 612  ]
"758
[; ;tester.c: 758:         }
}
"760
[; ;tester.c: 760:         case 'E':
[e :U 623 ]
"761
[; ;tester.c: 761:         {
{
"762
[; ;tester.c: 762:             printf("-> SLAVETEST:5:1");
[e ( _printf :s 63C ]
"763
[; ;tester.c: 763:             break;
[e $U 612  ]
"765
[; ;tester.c: 765:         }
}
"767
[; ;tester.c: 767:         case 'e':
[e :U 624 ]
"768
[; ;tester.c: 768:         {
{
"769
[; ;tester.c: 769:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 64C ]
"770
[; ;tester.c: 770:             break;
[e $U 612  ]
"771
[; ;tester.c: 771:         }
}
"773
[; ;tester.c: 773:         case 'F':
[e :U 625 ]
"774
[; ;tester.c: 774:         {
{
"775
[; ;tester.c: 775:             printf("-> SLAVETEST:6:1");
[e ( _printf :s 65C ]
"776
[; ;tester.c: 776:             break;
[e $U 612  ]
"778
[; ;tester.c: 778:         }
}
"780
[; ;tester.c: 780:         case 'f':
[e :U 626 ]
"781
[; ;tester.c: 781:         {
{
"782
[; ;tester.c: 782:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 66C ]
"783
[; ;tester.c: 783:             break;
[e $U 612  ]
"784
[; ;tester.c: 784:         }
}
"786
[; ;tester.c: 786:         case 'G':
[e :U 627 ]
"787
[; ;tester.c: 787:         {
{
"788
[; ;tester.c: 788:             printf("-> SLAVETEST:7:1");
[e ( _printf :s 67C ]
"789
[; ;tester.c: 789:             break;
[e $U 612  ]
"791
[; ;tester.c: 791:         }
}
"793
[; ;tester.c: 793:         case 'g':
[e :U 628 ]
"794
[; ;tester.c: 794:         {
{
"795
[; ;tester.c: 795:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 68C ]
"796
[; ;tester.c: 796:             break;
[e $U 612  ]
"797
[; ;tester.c: 797:         }
}
"799
[; ;tester.c: 799:         case 'H':
[e :U 629 ]
"800
[; ;tester.c: 800:         {
{
"801
[; ;tester.c: 801:             printf("-> SLAVETEST:8:1");
[e ( _printf :s 69C ]
"802
[; ;tester.c: 802:             break;
[e $U 612  ]
"804
[; ;tester.c: 804:         }
}
"806
[; ;tester.c: 806:         case 'h':
[e :U 630 ]
"807
[; ;tester.c: 807:         {
{
"808
[; ;tester.c: 808:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 70C ]
"809
[; ;tester.c: 809:             break;
[e $U 612  ]
"810
[; ;tester.c: 810:         }
}
"812
[; ;tester.c: 812:         case 'I':
[e :U 631 ]
"813
[; ;tester.c: 813:         {
{
"814
[; ;tester.c: 814:             printf("-> SLAVETEST:9:1");
[e ( _printf :s 71C ]
"815
[; ;tester.c: 815:             break;
[e $U 612  ]
"817
[; ;tester.c: 817:         }
}
"819
[; ;tester.c: 819:         case 'i':
[e :U 632 ]
"820
[; ;tester.c: 820:         {
{
"821
[; ;tester.c: 821:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 72C ]
"822
[; ;tester.c: 822:             break;
[e $U 612  ]
"823
[; ;tester.c: 823:         }
}
"825
[; ;tester.c: 825:         case 'J':
[e :U 633 ]
"826
[; ;tester.c: 826:         {
{
"827
[; ;tester.c: 827:             printf("-> SLAVETEST:10:1");
[e ( _printf :s 73C ]
"828
[; ;tester.c: 828:             break;
[e $U 612  ]
"830
[; ;tester.c: 830:         }
}
"832
[; ;tester.c: 832:         case 'j':
[e :U 634 ]
"833
[; ;tester.c: 833:         {
{
"834
[; ;tester.c: 834:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 74C ]
"835
[; ;tester.c: 835:             break;
[e $U 612  ]
"836
[; ;tester.c: 836:         }
}
"838
[; ;tester.c: 838:         case 'K':
[e :U 635 ]
"839
[; ;tester.c: 839:         {
{
"840
[; ;tester.c: 840:             printf("-> SLAVETEST:11:1");
[e ( _printf :s 75C ]
"841
[; ;tester.c: 841:             break;
[e $U 612  ]
"843
[; ;tester.c: 843:         }
}
"845
[; ;tester.c: 845:         case 'k':
[e :U 636 ]
"846
[; ;tester.c: 846:         {
{
"847
[; ;tester.c: 847:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 76C ]
"848
[; ;tester.c: 848:             break;
[e $U 612  ]
"849
[; ;tester.c: 849:         }
}
"851
[; ;tester.c: 851:         case 'L':
[e :U 637 ]
"852
[; ;tester.c: 852:         {
{
"853
[; ;tester.c: 853:             printf("-> SLAVETEST:12:1");
[e ( _printf :s 77C ]
"854
[; ;tester.c: 854:             break;
[e $U 612  ]
"856
[; ;tester.c: 856:         }
}
"858
[; ;tester.c: 858:         case 'l':
[e :U 638 ]
"859
[; ;tester.c: 859:         {
{
"860
[; ;tester.c: 860:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 78C ]
"861
[; ;tester.c: 861:             break;
[e $U 612  ]
"862
[; ;tester.c: 862:         }
}
"864
[; ;tester.c: 864:         case 'M':
[e :U 639 ]
"865
[; ;tester.c: 865:         {
{
"866
[; ;tester.c: 866:             printf("-> SLAVETEST:13:1");
[e ( _printf :s 79C ]
"867
[; ;tester.c: 867:             break;
[e $U 612  ]
"869
[; ;tester.c: 869:         }
}
"871
[; ;tester.c: 871:         case 'm':
[e :U 640 ]
"872
[; ;tester.c: 872:         {
{
"873
[; ;tester.c: 873:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 80C ]
"874
[; ;tester.c: 874:             break;
[e $U 612  ]
"875
[; ;tester.c: 875:         }
}
"877
[; ;tester.c: 877:         case 'N':
[e :U 641 ]
"878
[; ;tester.c: 878:         {
{
"879
[; ;tester.c: 879:             printf("-> SLAVETEST:14:1");
[e ( _printf :s 81C ]
"880
[; ;tester.c: 880:             break;
[e $U 612  ]
"882
[; ;tester.c: 882:         }
}
"884
[; ;tester.c: 884:         case 'n':
[e :U 642 ]
"885
[; ;tester.c: 885:         {
{
"886
[; ;tester.c: 886:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 82C ]
"887
[; ;tester.c: 887:             break;
[e $U 612  ]
"888
[; ;tester.c: 888:         }
}
"890
[; ;tester.c: 890:         case 'O':
[e :U 643 ]
"891
[; ;tester.c: 891:         {
{
"892
[; ;tester.c: 892:             printf("-> SLAVETEST:15:1");
[e ( _printf :s 83C ]
"893
[; ;tester.c: 893:             break;
[e $U 612  ]
"895
[; ;tester.c: 895:         }
}
"897
[; ;tester.c: 897:         case 'o':
[e :U 644 ]
"898
[; ;tester.c: 898:         {
{
"899
[; ;tester.c: 899:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 84C ]
"900
[; ;tester.c: 900:             break;
[e $U 612  ]
"901
[; ;tester.c: 901:         }
}
"903
[; ;tester.c: 903:         case 'P':
[e :U 645 ]
"904
[; ;tester.c: 904:         {
{
"905
[; ;tester.c: 905:             printf("-> SLAVETEST:16:1");
[e ( _printf :s 85C ]
"906
[; ;tester.c: 906:             break;
[e $U 612  ]
"908
[; ;tester.c: 908:         }
}
"910
[; ;tester.c: 910:         case 'p':
[e :U 646 ]
"911
[; ;tester.c: 911:         {
{
"912
[; ;tester.c: 912:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 86C ]
"913
[; ;tester.c: 913:             break;
[e $U 612  ]
"914
[; ;tester.c: 914:         }
}
"916
[; ;tester.c: 916:         case 'Q':
[e :U 647 ]
"917
[; ;tester.c: 917:         {
{
"918
[; ;tester.c: 918:             printf("-> SLAVETEST:17:1");
[e ( _printf :s 87C ]
"919
[; ;tester.c: 919:             break;
[e $U 612  ]
"921
[; ;tester.c: 921:         }
}
"923
[; ;tester.c: 923:         case 'q':
[e :U 648 ]
"924
[; ;tester.c: 924:         {
{
"925
[; ;tester.c: 925:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 88C ]
"926
[; ;tester.c: 926:             break;
[e $U 612  ]
"927
[; ;tester.c: 927:         }
}
"929
[; ;tester.c: 929:         case 'R':
[e :U 649 ]
"930
[; ;tester.c: 930:         {
{
"931
[; ;tester.c: 931:             printf("-> SLAVETEST:18:1");
[e ( _printf :s 89C ]
"932
[; ;tester.c: 932:             break;
[e $U 612  ]
"934
[; ;tester.c: 934:         }
}
"936
[; ;tester.c: 936:         case 'r':
[e :U 650 ]
"937
[; ;tester.c: 937:         {
{
"938
[; ;tester.c: 938:             printf("-> SLAVE ERREUR:");
[e ( _printf :s 90C ]
"939
[; ;tester.c: 939:             break;
[e $U 612  ]
"940
[; ;tester.c: 940:         }
}
"942
[; ;tester.c: 942:         default:
[e :U 651 ]
"943
[; ;tester.c: 943:             break;
[e $U 612  ]
"946
[; ;tester.c: 946:     }
}
[e $U 612  ]
[e :U 613 ]
[e [\ -> _repSlave `i , $ -> -> 122 `ui `i 614
 , $ -> -> 65 `ui `i 615
 , $ -> -> 97 `ui `i 616
 , $ -> -> 66 `ui `i 617
 , $ -> -> 98 `ui `i 618
 , $ -> -> 67 `ui `i 619
 , $ -> -> 99 `ui `i 620
 , $ -> -> 68 `ui `i 621
 , $ -> -> 100 `ui `i 622
 , $ -> -> 69 `ui `i 623
 , $ -> -> 101 `ui `i 624
 , $ -> -> 70 `ui `i 625
 , $ -> -> 102 `ui `i 626
 , $ -> -> 71 `ui `i 627
 , $ -> -> 103 `ui `i 628
 , $ -> -> 72 `ui `i 629
 , $ -> -> 104 `ui `i 630
 , $ -> -> 73 `ui `i 631
 , $ -> -> 105 `ui `i 632
 , $ -> -> 74 `ui `i 633
 , $ -> -> 106 `ui `i 634
 , $ -> -> 75 `ui `i 635
 , $ -> -> 107 `ui `i 636
 , $ -> -> 76 `ui `i 637
 , $ -> -> 108 `ui `i 638
 , $ -> -> 77 `ui `i 639
 , $ -> -> 109 `ui `i 640
 , $ -> -> 78 `ui `i 641
 , $ -> -> 110 `ui `i 642
 , $ -> -> 79 `ui `i 643
 , $ -> -> 111 `ui `i 644
 , $ -> -> 80 `ui `i 645
 , $ -> -> 112 `ui `i 646
 , $ -> -> 81 `ui `i 647
 , $ -> -> 113 `ui `i 648
 , $ -> -> 82 `ui `i 649
 , $ -> -> 114 `ui `i 650
 651 ]
[e :U 612 ]
"950
[; ;tester.c: 950: }
[e :UE 611 ]
}
[p f _printf 9437696 ]
[a 2C 65 84 84 69 78 84 69 32 65 67 81 85 73 84 84 69 77 69 78 84 0 ]
[a 43C 65 84 84 69 78 84 69 32 65 67 81 85 73 84 84 69 77 69 78 84 0 ]
[a 31C 70 73 78 32 69 70 70 65 67 69 77 69 78 84 0 ]
[a 26C 69 70 70 65 67 69 77 69 78 84 0 ]
[a 39C 80 82 69 83 83 69 82 32 79 75 32 79 85 32 69 82 82 69 85 82 0 ]
[a 11C 69 82 82 69 85 82 32 80 82 79 71 82 65 77 77 65 84 73 79 78 0 ]
[a 21C 70 73 78 32 80 82 79 71 82 65 77 77 65 84 73 79 78 0 ]
[a 16C 80 82 79 71 82 65 77 77 65 84 73 79 78 0 ]
[a 51C 84 69 83 84 32 79 75 0 ]
[a 1C 84 69 83 84 32 78 79 78 32 67 79 78 70 79 82 77 69 0 ]
[a 37C 84 69 83 84 32 78 79 78 32 67 79 78 70 79 82 77 69 0 ]
[a 41C 78 79 78 32 67 79 78 70 79 82 77 69 0 ]
[a 42C 82 69 83 85 76 84 65 84 32 67 79 78 70 73 82 77 69 0 ]
[a 50C 69 82 82 69 85 82 32 86 65 76 73 68 69 69 0 ]
[a 56C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 58C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 60C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 62C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 64C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 66C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 68C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 70C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 72C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 74C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 76C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 78C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 80C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 82C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 84C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 86C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 88C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 90C 45 62 32 83 76 65 86 69 32 69 82 82 69 85 82 58 0 ]
[a 54C 45 62 32 83 76 65 86 69 32 69 78 32 65 84 84 69 78 84 69 58 0 ]
[a 40C 69 84 65 80 69 32 49 54 0 ]
[a 44C 69 84 65 80 69 32 49 54 0 ]
[a 48C 69 84 65 80 69 32 49 54 0 ]
[a 52C 69 84 65 80 69 32 49 54 0 ]
[a 9C 84 69 83 84 32 67 65 82 84 69 32 68 57 50 53 69 68 52 0 ]
[a 14C 84 69 83 84 32 67 65 82 84 69 32 68 57 50 53 69 68 52 0 ]
[a 19C 84 69 83 84 32 67 65 82 84 69 32 68 57 50 53 69 68 52 0 ]
[a 24C 84 69 83 84 32 67 65 82 84 69 32 68 57 50 53 69 68 52 0 ]
[a 29C 84 69 83 84 32 67 65 82 84 69 32 68 57 50 53 69 68 52 0 ]
[a 38C 86 69 82 73 70 73 69 82 32 80 49 32 69 84 32 80 50 0 ]
[a 45C 84 69 83 84 32 80 49 0 ]
[a 49C 84 69 83 84 32 80 49 0 ]
[a 71C 45 62 32 83 76 65 86 69 84 69 83 84 58 57 58 49 0 ]
[a 69C 45 62 32 83 76 65 86 69 84 69 83 84 58 56 58 49 0 ]
[a 89C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 56 58 49 0 ]
[a 67C 45 62 32 83 76 65 86 69 84 69 83 84 58 55 58 49 0 ]
[a 87C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 55 58 49 0 ]
[a 65C 45 62 32 83 76 65 86 69 84 69 83 84 58 54 58 49 0 ]
[a 85C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 54 58 49 0 ]
[a 63C 45 62 32 83 76 65 86 69 84 69 83 84 58 53 58 49 0 ]
[a 83C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 53 58 49 0 ]
[a 61C 45 62 32 83 76 65 86 69 84 69 83 84 58 52 58 49 0 ]
[a 81C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 52 58 49 0 ]
[a 59C 45 62 32 83 76 65 86 69 84 69 83 84 58 51 58 49 0 ]
[a 79C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 51 58 49 0 ]
[a 57C 45 62 32 83 76 65 86 69 84 69 83 84 58 50 58 49 0 ]
[a 77C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 50 58 49 0 ]
[a 55C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 58 49 0 ]
[a 75C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 49 58 49 0 ]
[a 73C 45 62 32 83 76 65 86 69 84 69 83 84 58 49 48 58 49 0 ]
[a 5C 45 62 32 84 69 83 84 32 67 79 78 70 79 82 77 69 32 45 32 65 84 84 69 78 84 69 32 65 67 81 85 73 84 84 69 77 69 78 84 13 10 0 ]
[a 23C 45 62 32 69 70 70 65 67 69 77 69 78 84 32 69 78 32 67 79 85 82 83 13 10 0 ]
[a 13C 45 62 32 80 82 79 71 82 65 77 77 65 84 73 79 78 32 69 78 32 67 79 85 82 83 13 10 0 ]
[a 6C 45 62 32 84 69 83 84 32 77 65 78 85 69 76 32 69 78 32 67 79 85 82 83 13 10 0 ]
[a 8C 45 62 32 69 82 82 69 85 82 32 80 82 79 71 82 65 77 77 65 84 73 79 78 13 10 0 ]
[a 33C 45 62 32 83 76 65 86 69 95 84 69 83 84 32 79 78 13 10 0 ]
[a 7C 45 62 32 84 69 83 84 32 79 78 13 10 0 ]
[a 34C 45 62 32 83 76 65 86 69 32 82 69 83 80 79 78 83 69 32 78 85 76 76 13 10 0 ]
[a 4C 45 62 32 70 73 78 32 84 69 83 84 32 77 65 78 85 69 76 13 10 0 ]
[a 35C 45 62 32 70 73 78 32 84 69 83 84 32 77 65 78 85 69 76 13 10 0 ]
[a 53C 45 62 32 65 112 112 117 121 101 114 32 115 117 114 32 79 75 13 10 0 ]
[a 36C 45 62 32 84 69 83 84 32 65 67 81 85 73 84 84 69 13 10 0 ]
[a 28C 45 62 32 69 70 70 65 67 69 77 69 78 84 32 84 69 82 77 73 78 69 13 10 0 ]
[a 18C 45 62 32 80 82 79 71 82 65 77 77 65 84 73 79 78 32 84 69 82 77 73 78 69 69 13 10 0 ]
[a 3C 0 ]
[a 10C 0 ]
[a 12C 0 ]
[a 15C 0 ]
[a 17C 0 ]
[a 20C 0 ]
[a 22C 0 ]
[a 25C 0 ]
[a 27C 0 ]
[a 30C 0 ]
[a 32C 0 ]
[a 46C 0 ]
[a 47C 0 ]
